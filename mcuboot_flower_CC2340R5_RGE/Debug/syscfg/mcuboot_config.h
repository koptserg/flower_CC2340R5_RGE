 /*
 * Copyright (c) 2018 Open Source Foundries Limited
 * Copyright (c) 2019 Arm Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
/*
 *  ======== mcuboot_config.h ========
 *  Configuration File for MCUboot
 *
 *  DO NOT EDIT - This file is generated by the SysConfig tool.
 *
 */

#ifndef __MCUBOOT_CONFIG_H__
#define __MCUBOOT_CONFIG_H__

/*
 * Signature
 *
 * Enable image signature.
 */

#define MCUBOOT_USE_TI_CRYPTO
#define MCUBOOT_SIGN_EC256



/*
 * Upgrade mode
 *
 */
/* Enable the overwrite-only code path. */

#define MCUBOOT_OVERWRITE_ONLY

/*software based downgrade prevention the image version numbers are compared */
#define MCUBOOT_DOWNGRADE_PREVENTION
#define MCUBOOT_WATCHDOG_FEED() { }


/*
 * Number of separately updatable images
 */
#define MCUBOOT_IMAGE_NUMBER 1

/*
 * Assertions
 */

#define MCUBOOT_HAVE_ASSERT_H

/*
 * Always check the signature of the image in the primary slot before booting,
 * even if no upgrade was performed. This is recommended if the boot
 * time penalty is acceptable.
 */
#define MCUBOOT_VALIDATE_PRIMARY_SLOT

/*
 * Flash abstraction
 */

/* Uncomment if your flash map API supports flash_area_get_sectors().
 * See the flash APIs for more details. */
#define MCUBOOT_USE_FLASH_AREA_GET_SECTORS

/* Default maximum number of flash sectors per image slot; change
 * as desirable. */
#define MCUBOOT_MAX_IMG_SECTORS 512

/*
 * Logging
 */

/*
 * If logging is enabled the following functions must be defined by the
 * platform:
 *
 *    MCUBOOT_LOG_MODULE_REGISTER(domain)
 *      Register a new log module and add the current C file to it.
 *
 *    MCUBOOT_LOG_MODULE_DECLARE(domain)
 *      Add the current C file to an existing log module.
 *
 *    MCUBOOT_LOG_ERR(...)
 *    MCUBOOT_LOG_WRN(...)
 *    MCUBOOT_LOG_INF(...)
 *    MCUBOOT_LOG_DBG(...)
 *
 * The function priority is:
 *
 *    MCUBOOT_LOG_ERR > MCUBOOT_LOG_WRN > MCUBOOT_LOG_INF > MCUBOOT_LOG_DBG
 */
#define MCUBOOT_HAVE_LOGGING 1

#endif /* __MCUBOOT_CONFIG_H__ */